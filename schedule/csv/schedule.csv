Don't change any of these headers!,Session Title,Date,Time Start,Time End,Room/Location,Schedule Track (Optional),Description (Optional)
,Registration / Breakfast,09-18-2015,08:00,09:30,Cafeteria,,
,Opening Plenary,09-18-2015,09:30,10:30,PythonAnywhere Room (CC1.3),,
,"Keynote: Van Lindberg, PSF Chair",09-18-2015,10:30,11:30,PythonAnywhere Room (CC1.3),,
,DjangoGirls,09-18-2015,10:30,12:00,Training and Hackathon (Simulation Centre),,
,Trans*Code,09-18-2015,10:30,12:30,Training and Hackathon (Simulation Centre),,
,Minecraft in Education,09-18-2015,10:30,11:20,Bank of America Education Track (Simulation Centre),,
,First steps in Python,09-18-2015,10:30,11:20,Bank of America Education Track (Simulation Centre),,
,Skycademy,09-18-2015,11:20,12:10,Bank of America Education Track (Simulation Centre),,
,PyGame Zero,09-18-2015,11:20,12:10,Bank of America Education Track (Simulation Centre),,
,Python's Infamous GIL,09-18-2015,11:30,12:00,PythonAnywhere Room (CC1.3),,"Larry Hastings

You’ve heard about Python’s GIL. But what is it really? What does it do, both good and bad?

Come learn all about the Python GIL. You’ll learn about its history, all the problems it solves, all the problems it causes (that we know about!), and what it would take to remove the GIL.

Attendees should be familiar with the terrors inherent in multithreaded programming, and be comfortable with a little C code in the slides."
,A deep dive into python import hooks,09-18-2015,11:30,12:00,Osper Room (CC1.4),,"Louis Taylor

In this session we will introduce python import hooks and all the fun that can be had with them. Find out how to completely customise import logic and import modules from any location and any type of file."
,Introduction to Python,09-18-2015,11:30,13:00,YPlan Room (CC1.8),,
,"Real-Time Data + Django = Fun,Growth + Profit",09-18-2015,11:30,12:00,LaterPay Room (CC2.1),,"Rachel Willmer

I've been trying for 2 years to find a good [*] solution for how to add real-time wow into my ebook search site Luzme. Finally, I think I may have it; 

Python/Django meets AngularJS/Firebase; and Luzme finally gets real-time data updates without thrashing the database with repeated querying.

[*] ""Good"" = easy to implement + scalable + financially viable"
,PGP key signing party,09-18-2015,12:00,13:00,PythonAnywhere Room (CC1.3),,
,Career Clinic,09-18-2015,12:00,13:00,Osper Room (CC1.4),,
,Lunchtime Event,09-18-2015,12:00,13:00,LaterPay Room (CC2.1),,
,DjangoGirls Lunch,09-18-2015,12:00,12:30,Training and Hackathon (Simulation Centre),,
,Your code in space with AstroPi,09-18-2015,12:10,13:00,Bank of America Education Track (Simulation Centre),,
,Code Club,09-18-2015,12:10,13:00,Bank of America Education Track (Simulation Centre),,
,DjangoGirls,09-18-2015,12:30,18:00,Training and Hackathon (Simulation Centre),,
,Trans*Code Lunch,09-18-2015,12:30,13:00,Training and Hackathon (Simulation Centre),,
,Lunch time Event Spare Slot,09-18-2015,13:00,14:00,PythonAnywhere Room (CC1.3),,
,Lunchtime Event Spare Slot,09-18-2015,13:00,14:00,Osper Room (CC1.4),,
,Workshop Room Setup),09-18-2015,13:00,14:00,YPlan Room (CC1.8),,
,Lunchtime Event,09-18-2015,13:00,14:00,LaterPay Room (CC2.1),,
,Trans*Code,09-18-2015,13:00,18:00,Training and Hackathon (Simulation Centre),,
,Education Track Lunch,09-18-2015,13:00,14:00,Bank of America Education Track (Simulation Centre),,
,Keynote: Daniele Procida All I really want is power,09-18-2015,14:00,15:00,PythonAnywhere Room (CC1.3),,"Daniele Procida

Computing power is a kind of power, but I’m interested in a more powerful power: power over other people.

I want to understand power and where it comes from. I’m curious about the balances and imbalances of power in our worlds of software development, how it moves around and where it goes. I want to know how it affects the people who have it, how they use it, and whether they even realise that they hold it.

I believe that it really matters to open-source communities, that it’s poorly understood, and that not understanding it has harmful consequences for us."
,"All hands resource generation un-conference, adopt a developer",09-18-2015,14:00,16:00,Bank of America Education Track (Simulation Centre),,
,Analyzing Python with Pylint,09-18-2015,15:00,15:30,PythonAnywhere Room (CC1.3),,"Claudiu Popa

Given the dynamic nature of Python, some bugs tend to creep in our codebases. Innocents NameErrors or hard-to-find bugs with variables used in a closure, but defined in a loop, they all stand no chance in front of Pylint (http://pylint.org/).

In this talk, I’ll present one of the oldest static analysis tools for Python, with emphasis on what it can do to understand your Python code. Pylint is both a style checker, enforcing PEP 8 rules, as well as a code checker in the vein of pyflakes and pychecker, but its true power isn’t always obvious in the eye of beholder, especially when it's hidden through its verbosity. Interpreting its results can be a daunting task, but there are tricks which can be used to improve its user experience, such as enabling only structural checking with the -E flag or disabling unwanted category checks.

Pylint can detect simple bugs such as unused variables and imports, but it can also detect more complicated cases such as invalid arguments passed to functions, it understands the method resolution order of your classes, generators, contexts managers and what special methods aren’t implemented correctly.

Starting from abstract syntax trees, we’ll go through its inference engine and we’ll see how Pylint understands the logical flow of your program and what sort of type hinting techniques are used to improve its inference, including PEP 484 type hints. Pylint's roadmap includes better understanding of Python code, by improving its flow control analysis, escape analysis, understanding metaclasses and descriptors and having a better type checker, as well as improving the user experience, by reducing the number of false positives it currently has. As a bonus, I’ll show how it can be used to help you port your long-forgotten library to Python 3, using its new –py3k mode, which emits warnings regarding Python 3 compatibility.

The participants should have a basic understanding of Python. No other prerequisite is necessary, since the other concepts will be explained during the talk.

The following concepts will be explained during this talk:

  -   abstract syntax trees
   -  static analysis and why using static analysis for your code
   -  what is inference and what forms an inference engine"
,Choosing a web framework for Python 3 and asyncio,09-18-2015,15:00,15:30,Osper Room (CC1.4),,"Dan Clark

I left PyconUK 2014 with a feeling that I couldn't look myself in the mirror for too much longer without upgrading at least one of my projects to python 3. Yet I was happy with my flask+gevent+websockets stack and the lack of a clear migration path to python 3 was putting me off.

In this talk, I'll cover some of the challenges that came with selecting aiohttp, a relatively young/small/clean framework built on asyncio, like login and user registration, things we take for granted when using a more mature framework like django, flask or pyramid."
,Django Security Workshop,09-18-2015,15:00,18:30,YPlan Room (CC1.8),,"Peter Inglesby

This workshop will explore some of the ways that Django helps you keep your applications and your users secure.

We'll do this by taking a simplish Django site, disabling some of Django's built-in protections, and looking at how to exploit the weaknesses that become exposed.

Along the way, we'll look at types of attack including session hijacking, cross site scripting, cross site request forgery, and SQL injection.

This workshop is not a comprehensive ""HOW TO"" guide for keeping a Django site secure.

Instead, its goal is to help you understand the mentality required to both evaluate the kinds of security risks that web applications are exposed to, and protect against those risks."
,Deploy a flask application in a single step,09-18-2015,15:00,15:30,LaterPay Room (CC2.1),,"Colin Moore-Hill

It is intended that the viewer will understand basics of cdeating a dev env and show it going live.
To go from nothing to a deployed flask application with neo4j database in one step using docker-create to heroku.

Might also include docker machine and swarm."
,Understanding PyPy,09-18-2015,15:30,16:00,PythonAnywhere Room (CC1.3),,"Francisco Fernández Castaño

PyPy is an alternative implementation of CPython implemented in Python, to newcomers understanding concepts like RPython, JIT, PyPy garbage collection and other core concepts could be difficult so this talk is aimed to introduce all of these concepts and understand better how PyPy works."
,Leadership of Technical Teams,09-18-2015,15:30,16:00,Osper Room (CC1.4),,"Owen Campbell

Over the years, I've led, and been a member of, numerous technical teams on a wide variety of projects. Based on that experience, this talk will describe my observations on the role of the leader in that sort of team.

The talk will be in 5 sections:

* Introduction - A bit about my background so you can judge whether to bother staying for the rest.
* Authority - Where it comes from and the challenges you might face depending on the answer.
* Priorities - What should you be focussing upon?
* Style - There are many leadership styles, but what's yours and what's appropriate for technical teams?
* Process - What's your role in defining and managing process?

The slides for this talk are available from my website: http://www.owencampbell.me.uk/docs/pyconuk2015.pdf

They were prepared using LaTeX and the code is available at Github: https://github.com/meatballs/pyconuk2015"
,Gabbi - Declarative HTTP Testing,09-18-2015,15:30,16:00,LaterPay Room (CC2.1),,"[Chris](https://tank.peermore.com/tanks/cdent) [Dent](https://twitter.com/anticdent)

[Gabbi](http://cdent.github.io/gabbi/) is a Python-based tool for
testing web APIs using an easy to write and read YAML format that allows
tests to focus on HTTP requests and responses, not Python. It was
developed to make it easier to learn and contribute to OpenStack APIs
but can be used in any environment, even for testing services that don't
use Python (if that's your thing).

The presentation will give an overview of why Gabbi exists and a live
demonstration of its features. Listeners will hopefully go home with a
new and useful tool and an expanded perspective on ways to make tests
for web APIs.

For a taste of what the presentation will provide see
[these slides](http://redhat.slides.com/chdent/gabbi?token=EE3TApJU)
which were used to give a similar talk at the OpenStack Liberty Summit.
This talk will be an updated version including new features and learnings
from use in the field."
,PyPy for mediocre programmers,09-18-2015,16:00,16:30,PythonAnywhere Room (CC1.3),,"Ronan Lamy

This is a talk for mediocre Python programmers by a mediocre programmer. PyPy is an alternative implementation of Python. It is notorious for being fast, but also for using clever algorithms pertaining to advanced concepts such as type inference, garbage collection, just-in-time compilation, etc. So, can we, mediocre programmers, realistically use PyPy?

Yes, absolutely. In fact, PyPy developers did all that hard work so that we wouldn't have to. As we'll see, it runs most Python code exactly like CPython does, save that it magically makes it faster.

Porting existing applications is always more involved than running a simple script, so we'll also examine likely difficulties such as code relying on CPython implementation details, and dependencies on C extensions, and explore simple principles to let PyPy run your code even faster.

Finally, we'll have a glimpse of the future by looking at what's brewing in the PyPy lair, such as software transactional memory, new speed optimisations, better support for Python 3 and NumPy, ..."
,Transducers in Python,09-18-2015,16:00,16:30,Osper Room (CC1.4),,
,Making code py2/3 compatible using python-future,09-18-2015,16:00,16:30,LaterPay Room (CC2.1),,"Jørn Lomax

The talk will demonstrate how to port a Python2 project to python3 using python-future. If you have ever ported a project from python2 to python3 and thought it was a pain. Or maybe you have a python2 only project you would like to update. Then this talk is for you!

The talk will focus on how to enable easy porting using the compatibility library ""python-future"" and how it can help ensure your project will work with any version of python. It will also give a very simple overview of the considerations that have to be taken into account when porting your project. It will also look briefly at back-porting python3 code to work with python2

Keywords: python3 python2 future futureize pasturize"
,TeachMeet,09-18-2015,16:00,18:00,Bank of America Education Track (Simulation Centre),,
,Making Python Computations Fast,09-18-2015,16:30,17:00,PythonAnywhere Room (CC1.3),,"Russel Winder

Python is slow at computing things. Some people try to use Cython, Numba or even NumPy to get round this. However the best way forward is to use a specialist native code language. No not C. Some people will use C++, but the real cogniscenti will use D or Chapel. This session will show how to do this using a small example."
,"Templating - Past, Present and Future",09-18-2015,16:30,17:00,Osper Room (CC1.4),,"Ed Singleton

A summary of templating, with a look at older templating systems that have fallen by the wayside, the current choices for templating, and what the future of templating might be like, including what other languages are doing and whether we can learn anything from them.

There will naturally be bit of a focus on web programming, though we will definitely be looking at other uses of templating.

There will be some analysis of different styles of templating, looking at brevity, readability and power.

If anyone wants a templating system to be discussed, do feel free to let me know ahead of time."
,Instrument Your Python App with Metric Collection,09-18-2015,16:30,17:00,LaterPay Room (CC2.1),,"Marek Mroz

Brief Description
-----
Metrics gathering and visualization is a standard practice for systems and operations engineers. While not as commonly used in the data science world, metric collection tools and techniques can be useful for scientific computing projects. In this talk I will show how to instrument an application to collect metrics, and create a dashboard view to monitor and explore the collected data.


Detailed description
-----
InfluxDB is an open-source distributed time series database that is easy to set up and to get started with. Grafana is a dashboarding tool that works with InfluxDB and other time series back-ends. In this talk I will use a practical example to present how to integrate a Python application with InfluxDB, explore the visualization capabilities that Grafana brings to the table, and show practical examples of insights that can be gained from instrumenting Python applications with metric collection.

""Log everything"" is a great piece of advice for any project, whether doing exploratory research or deploying a system to production. Logs are invaluable for debugging and investigating specific issues. However, individual logs are only snapshots of application runs in time, and as the project grows and begins to incorporate multiple services, data processing pipelines, and compute resources, the value that can be immediately derived from bare logs diminishes. Logs also tend to be wordy, and the more you log, the harder it is to find the relevant information.

Traditionally time series databases were used to collect system metrics, but they can be equally useful in gathering application specific metrics. Logs can be complemented by metric gathering tools, which collect the data that you care about and expose it in an easy to query and to present manner. In conjunction with intuitive visualization and dashboarding provided by Grafana, InfluxDB can give great insight into inner workings of a system, and bring together all the disparate information into an interface that makes metric data exploration convenient. The two tools can help analyze performance bottlenecks, algorithm deficiencies, and resource constraints."
,Document all the things,09-18-2015,17:00,17:30,PythonAnywhere Room (CC1.3),,"Kristian Glass

Producing good documentation is a bit like flossing.
We all know we should, but somehow we never quite do.

Why do we find it so hard? What can we do about it? Why does it even matter? How can we get better?

Whatever you're doing, whatever your background, these questions matter."
,Python for mobile games on iOS and Android,09-18-2015,17:00,17:30,Osper Room (CC1.4),,"Safe Hammad & Fiona Burrows

Have you ever wanted to write a game in Python but wished you could run it on your phone? At Arctic Shores we're doing just that and even have a couple of games in production on both Apple's AppStore and Google Play.

In this talk we'll guide you through the tools we use to target, build and deploy to iOS and Android, including Kivy, Kivy for iOS and Myrmidon, our open source pure-Python framework for rapid game development. We'll also share with you the choices we've made and some of the pain we've felt getting one codebase to run on multiple platforms.

We'll then roll our sleeves up and demonstrate Myrmidon and its unique way of easily allowing complex object interaction and behaviour. We'll also discuss its modular nature and how that enabled us to deploy native apps to iOS and Android.

Finally we'll discuss our plans for the future of Myrmidon and how you can get involved."
,Resilient data pipelines using Docker-Compose,09-18-2015,17:00,17:30,LaterPay Room (CC2.1),,"Heeren Sharma

I have had experience of developing data piplines in Python based on huge volumes of unstructured events, processing them and storing them in NoSQL solutions like Redis both for fun and profit . Developing and Deploying aggresievely while maintaining the uptime of the system and it's various components was a key metric.
Learning from mistakes and failures, I wish to share my story of how docker made my and can make your life easy and sane.
With advent of docker, bridge between development and deployment has been wonderfully shortened. This talk will be centered around orchestrating different docker containers using docker-compose and how it facilitates the designing of whole system architecture by taking use case of a data pipeline. After giving the first overview of the docker-compose, my experience of developing data pipeline will be shared. 
And in the end, a short live demo (hack session - designing and development) will be presented so as to grasp the concept of realizing this whole approach and take away hopefully to your production systems."
,Python Projects on the Raspberry Pi,09-18-2015,17:30,18:00,PythonAnywhere Room (CC1.3),,"Ben Nuttall

Python is the most popular language in the Raspberry Pi
community. Also with the Raspberry Pi, it's easy to do physical
computing directly from Python code - rather than usual embedded
hardware engineering in C or Assembler.

In this talk I’ll show examples of computing projects that use Python
on the Raspberry Pi and demonstrate the sort of code used in such
projects.

This will be an informative session with learning possibilities to
give those new to Python on the Raspberry Pi a chance to get started.

Ben Nuttall is the Education Developer Advocate at the Raspberry Pi
Foundation in Cambridge, UK."
,Testing and Async - a journey,09-18-2015,17:30,18:00,Osper Room (CC1.4),,"James Broadhead

Testing asynchronous code can require different approaches to writing tests, and learning to write good tests can inform the architecture of your codebase. 
This talk will describe the evolution of testing in the TweetDeck API, a Twisted Python web api, and discuss some approaches to extending test coverage over a large legacy codebase. 
Examples will be in Twisted, but will be intended to be relevant to anyone working with established codebases or working with async in particular."
,Accelerate and scale your tests with nodepool,09-18-2015,17:30,18:00,LaterPay Room (CC2.1),,"Yolanda Robla Mota

I will describe Nodepool, the Openstack Infra tool used to spin up virtual machines for testing,
according to the realtime demand for tests.

I will explain how to setup it, and how to integrate with Gearman and Jenkins, to allow to run
tests on real-time and scaling that automatically.

Link to project source code:
https://github.com/yrobla/nodepool_job_launcher
https://github.com/openstack-infra/nodepool

Additional OpenStack Infra documentation:
http://docs.openstack.org/infra/system-config/nodepool.html"
,Using logical flaws to steal and modify business critical data,09-18-2015,18:00,18:30,PythonAnywhere Room (CC1.3),,"Frans Rosén

Independently of what type of programming language you work with, business flaws that could expose unauthorized data will always be hard to mitigate. Depending on the business, an issue for one company could in fact be a feature for another. Frans Rosén, a notorious white hat hacker, will explain how to find and test for these kind of business critical issues with examples from real life, such as Twitter, Facebook and Yahoo."
,Enabling the Optimisation of Python,09-18-2015,18:00,18:30,Osper Room (CC1.4),,"Stefan Popa

Scripting languages such as PHP or Python have a crucial role in powering most of today’s Web or Cloud-based applications running in Datacenters worldwide. In order to maintain competitive advantage, the performance of Python language must be under constant scrutiny so that the best results are obtained. Enabling open source contributors to focus on the performance status of the contributed code can be achieved by automating some of the repetitive tasks. This presentation proposes a framework which aims to facilitate the monitoring process by automatically measuring the selected relevant benchmarks for the Python code base."
,Trade management in Python - a story of throughput,09-18-2015,18:00,18:30,LaterPay Room (CC2.1),,"Ciprian Miclaus

Python is used more and more in finance and in investment banking nowadays as the language and platform of choice to solve various problems that were previously solved in other languages: Java, C++ or VBA. 

This presentation offers a gentle introduction to the world of trading and investment banking, the kind of problems encountered and solved and how Python fits in the picture. While there are many use cases for using Python in investment banking, this story focuses on the trade management and trade capture use cases.

It decomposes the trade capture scenario and shows how throughput (measured generally in trades/second) can be measured and increased. It then goes to describe a real world custom solution based on multiprocessing in Python.

At the end of the presentation, the participants will hopefully gain an idea of what types of problems developers working for investment banks have to deal with on a day to day basis and how Python is put to good use to solve those problems."
,PyCon UK Diversity Reception,09-18-2015,18:00,19:30,Bistro,,
,Day Ends,09-18-2015,18:30,19:30,PythonAnywhere Room (CC1.3),,
,The Friday Night Charity Social in memory of John Pinner,09-18-2015,19:30,23:59,PythonAnywhere Room (CC1.3),,
,Registration / Breakfast,09-19-2015,08:00,09:00,Cafeteria,,
,Opening Plenary,09-19-2015,09:00,09:15,PythonAnywhere Room (CC1.3),,
,Keynote: Dr Simon Sheridan Landing on a comet: From planning to reality,09-19-2015,09:15,10:00,PythonAnywhere Room (CC1.3),,
,PyKids UK Setup,09-19-2015,09:15,09:30,Bank of America Education Track (Simulation Centre),,
,PyKids UK Opening,09-19-2015,09:30,10:00,Bank of America Education Track (Simulation Centre),,
,JSON and the daughters of Pelias,09-19-2015,10:00,10:30,PythonAnywhere Room (CC1.3),,"Zeth

The JSON Data Interchange Format is Internet Engineering Task Force
(IETF) standard RFC-7159. Since its release, many new draft internet
standards have been published including JSON Schema
(draft-zyp-json-schema-04), JSOND (draft-oskarsson-jsond-00), JSON
Pointer (RFC-6901), JSON-LD (W3C Recommendation), JSON Merge Patch
(RFC-7386), JSON-RPC and JSON Reference
(draft-pbryan-zyp-json-ref-03); while new Python object to JSON
serialisation techniques have been published such as jsonpickle.

In this session we will implement these JSON technologies using Python
and evaluate their individual usefulness but also discuss how these
proposals can and cannot be combined to make JSON powered Python
applications. Finally, we will look at a Python application that I
made using some of these technologies."
,Building SAAs with django and polla,09-19-2015,10:00,10:30,Osper Room (CC1.4),,"Emmanuelle Delescolle

Airavata is a tool to help run multiple websites under Django using the same codebase and the same database.
This talk will demonstrate how to build a SAAS service with those tools.

In the meantime you can already checkout [the project's page](https://bitbucket.org/levit_scs/airavata)."
,Fifty Shades of Disaster - Human Error and Complex Systems,09-19-2015,10:00,13:00,YPlan Room (CC1.8),,"Paul Ross

A four part workshop that discusses the failures that happen when humans interact with complex systems. The talks illustrate what can be learnt from how various industries handle risk management. They are illustrated with analysis of some famous and not so famous accidents from finance, aviation, marine, software, oil and various other industries.

You are not going to live long enough to make all the mistakes yourself so its best to learn from those made by others. After this workshop you will be more resilient to failure!

Part 1: Complexity, coupling and systems failure
  - A gentle introduction to human error and modern accident theory

Part 2: A concise history of civil aviation accidents
  - How air travel became so safe

Part 3: Blame and the fallacy of Root Cause Analysis
  - How not to investigate an accident

Part 4: Heroic recoveries, skill, luck and sheer professionalism
  - The disasters that never happened"
,Open Space for BoFs and discussion,09-19-2015,10:00,10:30,LaterPay Learning Space (Bistro),,
,Forming a PyCon UK research community,09-19-2015,10:00,10:30,The Software Sustainability Institute Room (CC2.1),,"Sarah Mount, University of Wolverhampton

Sarah opens the Science Track by introducing the workshops, talks and
sprint and discusses the formation of a research community."
,Group Activities: Minecraft Code Club Your code in space Internet of Toys,09-19-2015,10:00,11:15,Bank of America Education Track (Simulation Centre),,
,Managing mocks - the how why and when of mocking in Python,09-19-2015,10:30,11:00,PythonAnywhere Room (CC1.3),,"Helen Sherwood-Taylor

Mocking is a valuable technique for writing tests, but is it always a good idea?

I want to give a brief introduction to the how and why of mocking and the scope of its usefulness - I'll look at situations where it is provides the most benefit and the times when it can be taken too far. 

Python is packaged with an excellent mocking module but we'll also look at some other libraries which can help with mocking effectively."
,Template matching - howto,09-19-2015,10:30,11:00,Osper Room (CC1.4),,"Katie Barr

Image recognition, also known as template matching, is a key component of computer vision, and in this talk I will tell you how its done by describing algorithms used by OpenCV. The purpose of the talk is to give a practical introduction to this subject by describing both the theory and Python implementation.

Whilst the algorithms I describe are very simple, and intuitively understood, if you do not take care when implementing them you can end up with extremely inefficient computations. This is because you effectively compare every pixel in your image with every pixel in your template. These algorithms are called: correlation, correlation coefficient, and squared difference, all with or without normalisation. Normalisation is required to prevent false positives due to bright spots in images. I will explain why computing the value directly can lead to prohibitively slow computations. In order to efficiently implement the algorithms we must use a theorem called the convolution theorem, which uses Fourier Transforms. I give the Fourier Transform expressions for the template-image comparison, and this is what we use in our implementation.

I will introduce the algorithms and explain how they work, and then briefly introduce the Fourier Transform. This gives us everything we need to get started implementing our own image recognition with help from scipy and numpy. We will see how adjusting parameters in the algorithm can lead to very impressive results- the demo showing a range of letters, with different antialising, on different tiled backgrounds. By selecting how close your candidate match must be to the template at different stages during the algorithm, you can find matches with apparently large differences to the template, with no false positives. 

Whilst I will aim to ensure that the talk is comprehensible to those who haven't met Fourier Transforms before by introducing them in detail, with examples, I also hope those who have met them before will find the talk interesting, as they may not have seen this application. Whilst I apply the techniques to images, they can be used for anything which can be treated as a function."
,Open Space,09-19-2015,10:30,11:00,LaterPay Learning Space (Bistro),,
,Accelerating Scientific Code with Numba,09-19-2015,10:30,12:30,The Software Sustainability Institute Room (CC2.1),,"Graham Markall

This tutorial will provide an overview of Numba, a just-in-time Python compiler focused on numerical computing. Originally aimed at computations using Numpy arrays, it has been expanded to work with other Python types and can speed up computations that require more than just fast linear algebra operations. Numba targets both CPUs and CUDA GPUs by generating native code using the LLVM compiler infrastructure.

This introduction aims to span the breadth of use cases rather than focusing on a single area in depth. This is in order to enable the selection of appropriate portions of code to use with Numba, and the correct selection of Numba's facilities in each case.

Areas that will be covered include:

* An overview of the type system, with a view to understanding and overcoming typing issues,
* Compilation of Python functions using the @jit decorator,
* Creation of Numpy ufuncs in Python using the @vectorize decorator,
* Understanding the performance of compiled code, and performance optimisation tips,
* Debugging facilities in Numba.

This tutorial is intended for an audience of programmers and data scientists who have an interest in speeding up numerical routines, and people with a general interest in high-performance Python. In order to get started quickly, it is recommended that attendees install the Anaconda Python distribution or Miniconda, as this provides a robust mechanism for installing Numba on Linux, Mac OS X and Windows."
,5 impossible things before breakfast,09-19-2015,11:00,11:30,PythonAnywhere Room (CC1.3),,"Michael Sparks

Sometimes you're asked to deliver something that seems impossible, but
necessary in a given timeframe.  Sometimes it's several seemingly impossible
things.

Developing the prototype for the BBC Micro:bit - a pocket sized, child
programmable computer - was very much like this.  It had 3 months to be
delivered in a form sufficiently robust and usable to be used by children in
schools across the country; to be sufficiently documented to be completely
understood from scratch by others; and to be a sufficiently open and
flexible design to allow any and all parts of the system to change, while
retaining its core principles.

There was about 3 months to develop the entire stack from scratch. This
included a microcontroller based hardware stack, through firmware, a python
to C++ compiler (3-4 weeks), through django website, through to a QT
(PySide) client side application, through to publication of the device as a
network connected and controllable device via REST.  Python was involved in
all layers - including at microcontroller level on a device too small to run
any python interpreter.

The bulk of the development period had just one developer for hardware
and software.  For just 1 month there were 2 extra developers brought on
board, part time to assist.

This talk will be a detailed overview of the various subsystems, and the
strategies taken to deliver a complete, mass produce-able, and sufficiently
scalable product such an aggressive timescale.  The talk title is a nod to
the idea that while each of the various layers is doable alone in 3 months,
doing all the layers simultaneously using one developer is ... challenging.

It should be of interest to those interested in developing hardware and
software products, and especially those developing products that have both a
hardware and software element."
,"Asking About Gender - the Whats, Whys and Hows",09-19-2015,11:00,11:30,Osper Room (CC1.4),,"Claire Gowler

As we move towards more customised experiences for our users, why do we still insist of using the black boxes of male and female when asking users about their gender? And why are we asking for it in the first place?

Between 1 and 5 percent of the UK population identifies as having a non-binary gender or are transgender. This talk aims to help developers ask users about their gender in a useful and sensitive manner; educate on what non-binary means and what other issues non-binary and gender variant users may face when using the web."
,Setup for Poster Session,09-19-2015,11:00,12:00,LaterPay Learning Space (Bistro),,
,Everyone Swap: Minecraft Code Club Your code in space Internet of Toys,09-19-2015,11:15,12:30,Bank of America Education Track (Simulation Centre),,
,Finding more bugs with less work,09-19-2015,11:30,12:00,PythonAnywhere Room (CC1.3),,"David R. MacIver

Mainstream software testing is terrible, because the tools to make it good are missing. [Hypothesis](http://hypothesis.readthedocs.org/en/latest/) is a testing library that aims to fix this.

Where classically unit testing requires you to think of all the edge cases yourself, Hypothesis actively seeks them out for you. Instead of laboriously setting up examples where your code should work, you tell it how your code should always work and it finds the examples that prove you wrong.

This is a talk from the author of Hypothesis on the how, why and where of using it.

This talk presupposes you have at least a little bit of experience with testing in Python, but familiarity with advanced topics is not required."
,"Why I have an unhealthy love of tests, and why you shouldn't be scared about writing them",09-19-2015,11:30,12:00,Osper Room (CC1.4),,"Gemma Hentsch

Tests, I used to hate them, and actually when I start writing tests on a new project I still do.

But, you don't have to be scared about them, and I'd like to cover developing your testing strategy, what to test, what not to test, and how to explain how to convince higher ups that its not just a useful spending of time, its a vital part of your job."
,Build the right thing,09-19-2015,12:00,12:30,PythonAnywhere Room (CC1.3),,
,Recruitment Clinic,09-19-2015,12:00,14:00,Osper Room (CC1.4),,
,Poster Session,09-19-2015,12:00,14:00,LaterPay Learning Space (Bistro),,
,,09-19-2015,12:30,14:00,PythonAnywhere Room (CC1.3),,
,Py4Sci Lunch,09-19-2015,12:30,13:00,The Software Sustainability Institute Room (CC2.1),,
,"PyKids UK Lunch (provided packed lunch including sandwich, fruit and crisps)",09-19-2015,12:30,13:00,Bank of America Education Track (Simulation Centre),,
,,09-19-2015,13:00,14:00,YPlan Room (CC1.8),,
,Getting started with testing scientific programs part 1,09-19-2015,13:00,15:00,The Software Sustainability Institute Room (CC2.1),,"Martin Jones

When writing programs for scientific research, we tend to be focussed on getting results, so testing is generally not a priority. Often, this means that our data-processing pipelines end up incorporating programs that don't have test suites. Examples of high-profile retractions due to software errors (e.g. http://www.sciencemag.org/content/314/5807/1856.full) illustrate the dangers of this approach. 

This session will be a gentle introduction to testing, aimed at people writing scientific software who would like to start taking advantage of automated testing. We'll start with Python’s built-in tools and moving on to using the Nose testing framework. We’ll look at the problems that testing can solve, and see some best-practises for writing tests.

####Goals

The goal of this training session is for attendees to come away with (1) an understanding of some basic testing concepts, (2) some hands-on experience of running tests and interpreting the output, and (3) an idea of how to start applying these tools to their own projects.

####Who should attend this session
Attendees should have a basic knowledge of Python and should be familiar with the idea of functions, conditions and exceptions. They should also have the Nose package installed (pip install nose should work in most cases).

####What to do before this session
If you plan to attend this workshop, you can make things run smoothly by making sure that you have the `nose` module installed. Follow [the instructions on the nose website](https://nose.readthedocs.org/en/latest/). You'll also need internet access in order to download the example files, so make sure you can connect to the conference wifi."
,Freestyle code jam,09-19-2015,13:00,15:00,Bank of America Education Track (Simulation Centre),,
,Taming a Legacy Codebase with (Micro)services,09-19-2015,14:00,14:30,PythonAnywhere Room (CC1.3),,"John Chandler

This is a story of killing-off a legacy codebase written in PHP. To the business, it ""just works"" and the customers love it. To the developers, it's an unmaintainable nightmare of bad practice that has resisted every attempt to rewrite from scratch.

From the ashes of those doomed rewrites came a more incremental approach, finding areas in the code that could be extracted into small, composable services.

I'll discuss why microservices are nothing new, how our approach evolved, the challenges of adoption, and the pros and cons of the approach. Although I won't delve too deeply into the technology stack, I'll doff my (metaphorical) hat to Django REST Framework and a few other tools of choice that have made the work possible.

I hope to cut through the microservices hype, and illustrate one way of using them to refactor, and ultimately replace, a legacy monolith."
,Language Composition with RPython,09-19-2015,14:00,14:30,Osper Room (CC1.4),,"Edd Barrett

Language composition allows us to write programs in a mixture of different languages. This sounds ideal since it should allow us to choose the best mix of languages for the task at hand. Due to technical hurdles however, language compositions tend to be little more than simple foreign function interfaces (FFIs).
                                                                                
At King's college London we are trying to build better language compositions. We have devised a new approach which makes it much easier to intermingle programming languages without compromising performance. In this talk I will outline our approach and show what happens when you put Python and PHP in a blender."
,Scrapy Workshop Part 1,09-19-2015,14:00,16:00,YPlan Room (CC1.8),,"Juan Riaza

If you want to get data from the web, and there are no APIs available, then you need to use web scraping! Scrapy is the most effective and popular choice for web scraping and is used in many areas such as data science, journalism, business intelligence, web development, etc.

This workshop will provide an overview of Scrapy, starting from the fundamentals and working through each new topic with hands-on examples.

Participants will come away with a good understanding of Scrapy, the principles behind its design, and how to apply the best practices encouraged by Scrapy to any scraping task.

Goals:

- Set up a python environment.
- Learn basic concepts of the Scrapy framework."
,Open Space,09-19-2015,14:00,15:00,LaterPay Learning Space (Bistro),,
,Title To Be Determined; A tale of graphs and Markov chains,09-19-2015,14:30,15:00,PythonAnywhere Room (CC1.3),,"Gary Martin

In the runup to PyconUK 2014, I made the following ill-advised statement in an IRC channel: ""I feel like I should find something to talk about at PyconUK. I wish I had something interesting to talk about."" Nine seconds later someone replied ""create a markov chain to generate a talk from the names of the talks at pycon and europython, then talk about how you did that, using a title it generates as the title of the talk.""

Challenge accepted. This is that talk, admittedly one year late.

In this talk I will briefly describe Markov Chains as a means to simulate conversations and graph databases as a means to store Markov Chains. After this, I will discuss various considerations for creating interesting candidate responses in conversations, along with the challenges of too little and too much data. Finally, I will demonstrate my implementation and generate the title of this talk."
,Shipping your application using Conda,09-19-2015,14:30,15:00,Osper Room (CC1.4),,"Floris Bruynooghe

Shipping your Python application to customers has always been an
interesting challenge.  Many Operating Systems ship with a Python
version, but they only ship that to support their applications and it
will probably miss dependencies you need or be the wrong version.  So
you need to build and ship your own Python environment, but one which
can work on all these different platforms.  This is never easy.

Recently Continiuum Analytics have released their Conda package
manager as open source, which is very well suited to address this
problem.  It has support for building and distributing binary packages
and is capable of creating a stand-alone environment for your
application with no or minimal dependencies on the host OS.  But even
starting from a good tool there are still a lot of tricks to building
a good Python distribution.  This talk will concentrate on UNIX
platforms and dive into the details of what needs to be done to create
a portable distribution.  It will then discuss how to fully bootstrap
such a distribution using Conda."
,Plenary,09-19-2015,15:00,15:30,PythonAnywhere Room (CC1.3),,
,,09-19-2015,15:00,15:30,LaterPay Learning Space (Bistro),,
,Wrap up,09-19-2015,15:00,15:30,Bank of America Education Track (Simulation Centre),,
,Lightning PyKids,09-19-2015,15:30,16:00,PythonAnywhere Room (CC1.3),,
,PyCon UK Society AGM,09-19-2015,16:00,16:30,PythonAnywhere Room (CC1.3),,
,Teaching youngsters to code with pgzero on Raspberry Pi,09-19-2015,16:30,17:00,PythonAnywhere Room (CC1.3),,"Tim Golden

I've set up a short series of workshops to help a small group of 13-15-year-old boys to learn how to code with a small element of physical computing thrown in. This talk will describe the reasons for the setup and approach I used, and will discuss the outcomes: what worked; what didn't; and what I might do differently."
,OOD Rules,09-19-2015,16:30,17:00,Osper Room (CC1.4),,"Hamish Downer

We all want to keep our code comprehensible and easy to test, change, reuse and extend - it's easy(er) if you follow the OOD Rules.

This is based on my experience of trying to follow ""The Rules"" (of Object Orientated Design) by the wonderful Sandi Metz of the Ruby world. http://poodr.com/ and https://www.youtube.com/watch?v=npOGOmkxuio"
,Scrapy Workshop Part 2,09-19-2015,16:30,17:30,YPlan Room (CC1.8),,"Juan Riaza

If you want to get data from the web, and there are no APIs available, then you need to use web scraping! Scrapy is the most effective and popular choice for web scraping and is used in many areas such as data science, journalism, business intelligence, web development, etc.

This workshop will provide an overview of Scrapy, starting from the fundamentals and working through each new topic with hands-on examples.

Participants will come away with a good understanding of Scrapy, the principles behind its design, and how to apply the best practices encouraged by Scrapy to any scraping task.

Goals:

- Set up a python environment.
- Learn basic concepts of the Scrapy framework."
,Open Space,09-19-2015,16:30,17:00,LaterPay Learning Space (Bistro),,
,Getting started with testing scientific programs part 2,09-19-2015,16:30,18:00,The Software Sustainability Institute Room (CC2.1),,"Martin Jones

When writing programs for scientific research, we tend to be focussed on getting results, so testing is generally not a priority. Often, this means that our data-processing pipelines end up incorporating programs that don't have test suites. Examples of high-profile retractions due to software errors (e.g. http://www.sciencemag.org/content/314/5807/1856.full) illustrate the dangers of this approach. 

This session will be a gentle introduction to testing, aimed at people writing scientific software who would like to start taking advantage of automated testing. We'll start with Python’s built-in tools and moving on to using the Nose testing framework. We’ll look at the problems that testing can solve, and see some best-practises for writing tests.

####Goals

The goal of this training session is for attendees to come away with (1) an understanding of some basic testing concepts, (2) some hands-on experience of running tests and interpreting the output, and (3) an idea of how to start applying these tools to their own projects.

####Who should attend this session
Attendees should have a basic knowledge of Python and should be familiar with the idea of functions, conditions and exceptions. They should also have the Nose package installed (pip install nose should work in most cases).

####What to do before this session
If you plan to attend this workshop, you can make things run smoothly by making sure that you have the `nose` module installed. Follow [the instructions on the nose website](https://nose.readthedocs.org/en/latest/). You'll also need internet access in order to download the example files, so make sure you can connect to the conference wifi."
,PyKids Organisers Tidy up,09-19-2015,16:30,18:00,Bank of America Education Track (Simulation Centre),,
,Dispelling py.test magic,09-19-2015,17:00,17:30,PythonAnywhere Room (CC1.3),,"Tomek Paczkowski

This short talk will look under the hood of how py.test uses assertion
statement rewriting to give users a better, more pythonic testing experience. 

Usually in Python, assertion statements are quite simple and tedious to work
with, where a simple snippet of code like this:

    def double(x):
        return x * 2
    expected = 5
    assert double(2) == expected

finishes with message that does not include any context:

    Traceback (most recent call last):
      File ""t.py"", line 5, in <module>
        assert double(2) == expected
    AssertionError

With py.test, we get a lot more information with all intermittent values nicely
described:

    t.py:5: in <module>
        assert double(2) == expected
    E   assert 4 == 5
    E    +  where 4 = <function double at 0x1033add08>(2)

During this talk you will learn about all the ingredients needed to
reverse-engineer py.test behaviour, using import hooks described in PEP 302,
and the ast module from standard library. We will try to use these hidden gems
in a broader context, outside of testing."
,Chromebooks in education - the next five years,09-19-2015,17:00,17:30,Osper Room (CC1.4),,"Jonathan Fine

North American schools will, in 2015, buy 3.6 million chromebooks, out of global sales of 7.3 million (and 8 million predicted for 2016).  In this market they are outselling iPads and will soon challenge Microsoft.  Perhaps Europe will follow.

This talk will give a social, economic and technical survey of chromebooks, looking ahead to the next five years.  A major problem is using chromebooks as a platform for learning Python. This is because, like iPhones, they are locked down (except that they support a 'developer mode' that allows your own version of Linux to be run as a guest operating system).

This year I replaced my laptop with a chromebook."
,PSF Reception,09-19-2015,17:00,18:00,LaterPay Learning Space (Bistro),,
,Python adventures in Namibia,09-19-2015,17:30,18:00,PythonAnywhere Room (CC1.3),,"Daniele Procida

In February this year, with the help of the University of Namibia and Cardiff University's Phoenix Project, and with support from numerous organisations in the Django/Python community, we held Python Namibia, a four-day international software conference in the capital, Windhoek.

This is the story of why we did it, how we did it, how it went - and what's going to happen next."
,The Fabric that holds the cloud together,09-19-2015,17:30,18:00,Osper Room (CC1.4),,"Konstantin Benz

What's this session about?
Fabric is a Python library that offers a simple API to manage remote connections to distant servers and PCs via SSH protocol. Although it is a simple library, fabric is an extremely powerful tool for managing virtual machines in the cloud. Fabric can be used to login to virtual machines, upload files to them, install software packages on them or download files of them. Furthermore fabric can be extended to a fully-fledged (but still lightweight) configuration management tool. Fabric can be combined with the Python cuisine library and Python's ""native"" capabilities like serializing objects, writing data to JSON files and manipulating regular expressions. By employing this capabilities almost every VM administration task can be automated. VMs can be connected to each other, they can authenticate with each other and they can communicate to each other. In short: fabric is the ""glue"" that holds your VM environment together. If you're involved into DevOps, fabric is your tool to manage the cloud. You will get to know to do this in this session.

Overview
In this talk we will show you fabric's capability to manage and configure virtual machines in the popular Python-based cloud operating system OpenStack. Thereby we will show you how to do password-based and public key authentication with fabric, remote software installation with package managers, management of users and groups, management of file permissions, file uploads and downloads, configuration file manipulation with regular expressions (Python re module), serialization with pickle or JSON and manage communication between VMs. 

After this session you will know
* How to connect to OpenStack virtual machines via fabric API
* How to create private/public keypairs and authenticate to virtual machines
* How to combine fabric and cuisine to configure virtual machines
* How to use the Fabric API to employ package managers (like apt, yum, zypper, pacman) which install software packages on virtual machines
* How to add users and groups via Fabric to your virtual machines and set the right permissions to files and directories
* How to upload files to virtual machines or download files from virtual machines to your local computer
* How to use regular expressions and configuration file templates to create custom configuration files
* How to serialize objects with pickle or JSON and use serialization let VMs communicate to each other"
,,09-19-2015,17:30,18:00,YPlan Room (CC1.8),,
,The Lightning Talk Show,09-19-2015,18:00,19:15,PythonAnywhere Room (CC1.3),,
,Break,09-19-2015,19:15,19:30,PythonAnywhere Room (CC1.3),,
,The PyCon UK Dinner (Ticket required),09-19-2015,19:30,23:59,PythonAnywhere Room (CC1.3),,
,Alt Party (TBA),09-19-2015,19:30,23:59,The Software Sustainability Institute Room (CC2.1),,
,Breakfast,09-20-2015,08:00,09:00,Cafeteria,,
,Opening Plenary,09-20-2015,09:00,09:15,PythonAnywhere Room (CC1.3),,
,Keynote: Naomi Ceder - Confessions of a True Impostor (A Survival Guide),09-20-2015,09:15,10:00,PythonAnywhere Room (CC1.3),,
,Simplicity Is A Feature,09-20-2015,10:00,10:30,PythonAnywhere Room (CC1.3),,"Cory Benfield

When you talk to software professionals, you come away with the idea that we have a case of feature-itis. An enormous number of people evaluate software in terms of the length of feature lists and functionality. People dismiss software with fewer features as “underpowered”. And how many times have you heard software devalued because “I could build that”?

And yet, intuitively we know that’s not always true. urllib3 has more features than requests, but people overwhelmingly prefer to use requests. Android has more features than iOS, but Android hasn’t demolished iOS.

The reason for this is that simplicity is a powerful advantage. This talk will explain what is meant by simplicity, how to judge software simplicity, and how to approach building simple tools. It’ll also talk about how to structure your code to give the optimum balance of simplicity and flexibility, to keep yourself and your users happy down the line."
,Python and PostgreSQL a Wonderful Wedding,09-20-2015,10:00,10:30,Osper Room (CC1.4),,"Stephane Wirtel

Python and PostgreSQL, two tools we like to use for our projects but do you know everything about them?

The talk will give an overview of psycopg2, Peewee, SQLAlchemy, Alembic and multicorn, PL/Python, these libraries can be used with PostgreSQL.

- psycopg2, the well known connector, this basic component is really useful, well documented and battle-tested and used by the most famous toolkits of the Python ecosystem.
- Peewee, a minimalist ORM for Python, clear and brief, this ORM can be used if you want create a software with a minimalist ORM.
- SQLAlchemy, a Python SQL toolkit and Object Relational Mapper, you can use this library to create your models and interact with them.
- Alembic, a lightweight database migration tool for usage with SQLAlchemy, allows to create some migration scripts for your project.
- multicorn is a Python wrapper over the Foreign Data Wrapper of PostgreSQL
- PL/Python, a procedural language for PostgreSQL, allows to write functions in the Python language.

You can find this talk on  https://speakerdeck.com/matrixise/python-and-postgresql-a-wonderful-wedding-english"
,Building Async MicroServices,09-20-2015,10:00,12:30,YPlan Room (CC1.8),,"Norberto Leite

Over the course of the 2.5 hours of this workshop you will learn how to leverage both Python and MongoDB to build highly scalable, asynchronous applications based on micro services architecture. We will be building from scratch several different ""exotic"" services, using a variety of datasets, that together we can mashup into a consolidated application using our own laptops. 

We will start by introducing several  technologies that we will be using (e.g. Python, Tornado, MongoDB, AngularJS) and take a ten-thousand foot  overview of micro services architecture.
In the second half of the workshop, we will break into teams that will each take charge in implementing a micro services that will comprise our final application. 

This a fully hands-on workshop.

Learning objectives: 
Benefits of micro service architectures
MongoDB schema design 
MongoDB query optimization and profiling 
Basic understanding of AngularJS 
Flask as REST API platform

Target Audience:
This workshop is recommended to software developers eager to understand more about MongoDB and how to build async calls. Coding skills and basic understanding of Python is required. Prior experience with AngularJS and Tornado is welcomed.

Technical Requirement:
The attendee should bring their own laptop with MongoDB and Python (>2.7) installed. One should have administration grants over their system because we will need to expose ports and other communications to the network. The datasets and project instructions will be provided on site."
,Open Space,09-20-2015,10:00,10:30,LaterPay Learning Space (Bistro),,
,"Tit for Tat, Evolution, Game Theory and the Python Axelrod Library",09-20-2015,10:00,10:30,The Software Sustainability Institute Room (CC2.1),,"Vince Knight

This talk will begin with the origin of species. More precisely with a discussion of Darwin's theory of evolution and how Game Theory has been used to explain/illustrate aspects of cooperation in complex dynamics.

In 1980, professor Robert Axelrod created a computer tournament inviting submissions of code snippets that would compete against each other. A large amount of academic study has concentrated on the outcomes of this experiment. The particularity of the outcome, was that even when the tournament was repeated with a much larger number of strategies, a very simple strategy was victorious: Tit for Tat. This strategy tries it's best to cooperate with other strategies!

The talk will briefly discuss all of this but will concentrate on a new Python library (`pip install axelrod`). This project, hosted on github allows anyone to recreate the tournament but also (and arguably more importantly) submit strategies via pull request!

It is anticipated that this talk would be appreciated by coders of all levels as it gives a very low entry level for a contribution to an open source project. It should also be of interest to the more experienced coders as it is hoped that novel strategies will be devised and submitted. Indeed, historically strategies have been mainly devised by mathematicians and economists, surely the pyconuk attendees will bring something new to the repository?

Finally, for those who are perhaps not interested in 'playing along' the talk will also describe the newest addition to the project which is a Django project aiming to bring this study of evolution to a popular audience."
,Here be Dragons - Writing Safe C Extensions,09-20-2015,10:30,11:00,PythonAnywhere Room (CC1.3),,"Paul Ross

Writing Python C Extensions can be daunting; you have to embrace not just C but Python's C API, which is huge. Not only do you have to worry about just your standard malloc() and free() but now you also have to contend with how CPython manages its memory.

This talk describes what you need to know to write fast ,reliable Python extensions in 'C'. It demonstrates some of the pitfalls you can encounter and some simple and robust coding patterns that you can use to avoid them. After this talk you will be able to write Python extensions with confidence.

This talk is largely based on [this material][1] and some hard won industrial experience.

  [1]: https://github.com/paulross/PythonExtensionPatterns"
,Python powered Nukes,09-20-2015,10:30,11:00,Osper Room (CC1.4),,"Babak Khataee and Dan Milburn

NukeStudio is a digital compositing tool used throughout the visual effects industry. Our talk will try to cover how our Python bindings let users use NukeStudio as an environment for making their own tools for video processing and compositing. This will involve going through a couple of examples before going onto discussing the structure/design of the bindings and how they also enable us to use NukeStudio in other contexts."
,Open Space,09-20-2015,10:30,11:00,LaterPay Learning Space (Bistro),,
,Ship Data Science Products!,09-20-2015,10:30,11:00,The Software Sustainability Institute Room (CC2.1),,"Ian Ozsvald

Building and shipping working Data Science and scientific products is hard - learn from 10 years of Ian's experience at ModelInsight.io to find efficient ways through the mess of bad data, complicated data workflows and weakly designed code through to successfully deployed projects. 

This talk will include ways of getting data, cleaning and debugging it, approaches to deployment and various tips I've picked up along the way that'll save you lots of time.  

If you're fresh out of academia and want to do science then this will open your eyes to how 'stuff works in industry'. If you're in a growing data science team and you want to do more science and spend less time fighting fires - this talk is definitely for you. Be more effective, stop fighting fires and burning time.

Ian Ozsvald is co-founder of the 1,500+ member PyDataLondon meetup and conference series, a published O'Reilly author, international speaker and teacher and he runs a 10 year old Data Science consulting group in London (ModelInsight.io)."
,How (not) to argue - a recipe for more productive tech conversations,09-20-2015,11:00,11:30,PythonAnywhere Room (CC1.3),,"Harry Percival

If you've spent any time in technology, you will have come across the classic phenomenon of the unproductive technical debate -- and not just bikeshedding.  Much of our technical debate seems to end up full of cognitive dissonance, ego, the cherry-picking of evidence, talking at cross purposes, and argument for its own sake.

This talk will attempt to diagnose the roots of this disfunction, and provide some pointers towards how to engage in more constructive dialogue.

Keywords:  Torvalds, Socrates, Jonathan Haidt,  Djangogirls, Cognitive Behavioural Therapy."
,Testing applications for django CMS,09-20-2015,11:00,11:30,Osper Room (CC1.4),,"Iacopo Spalletti

Testing applications integrated with django CMS can be complex with a lot of boilerplate code and some dark corners
This talk will try to make it clearer and easier to write tests and will present tools to reduce the effort and the boilerplate"
,Open Space,09-20-2015,11:00,11:30,LaterPay Learning Space (Bistro),,
,iCE: Interactive cloud experimentation,09-20-2015,11:00,11:30,The Software Sustainability Institute Room (CC2.1),,"George Lestaris

In the cloud-computing era, many technologies like Puppet, chef, ansible, etc arose to take care of setting up, maintaining and provisioning virtual machine clusters. However these tools do not prove to be practical for cases where the user wants to test a deployment or try a small experiment involving many VMs in the cloud. Additionally they lack interactiveness and the user is unable to hijack or influence the deployment process during runtime. Python iCE is a tool that aims to enable interactive cloud experimentation. It can deploy VM clusters in EC2-compatible public clouds and allow the user to manage them through SSH. It formalises an experiment as a Python script with fabric tasks which can run on every or selected VMs in a cluster. It also integrates with IPython and it has its own shell that allows for interactive handling of the VMs. iCE is built with well-established Python libraries like IPython, boto and fabric.

iCE comes with a lightweight agent that registers a VM to an experiment’s pool. This agent will run automatically for VMs deployed with iCE but users can manually run it on already running VMs to utilise them through iCE. Its IPython shell facilitates the development and execution of experiments. Its main goal is to bring the ease of use and interactiveness of single-machine SSH sessions to virtual clusters."
,FIDO - The dog ate my password,09-20-2015,11:30,12:00,PythonAnywhere Room (CC1.3),,"Alex Willmer

Passwords are a pain for us all - programmers, users and admins alike. How can we reduce that pain, or eliminate it entirely?

This talk will 

 - Introduce [Universal Authentication Framework (UAF) & Universal Second Factor (U2F)][specs]
 - Describe how they streamline authentication, even eliminate passwords entirely
 - Show how to integrate UAF/U2F into a Django web application
 - Summarize the state of support for UAF & U2F in browsers, devices, and the wider world

As an audience member you will

 - Learn how to implement seamless authentication
 - Gain a sense of hope, that you never have type `EH3EX?e)8>6%sZ)48B^l3o08R` again

This talk is a condensed version of [Taking the pain out of passwords and authentication][eptalk], first presented at EuroPython 2015.

[eptalk]: https://ep2015.europython.eu/conference/talks/taking-the-pain-out-of-passwords-and-authentication
[specs]: https://fidoalliance.org/specifications/overview/"
,The Ladder to Python 3,09-20-2015,11:30,12:00,Osper Room (CC1.4),,"Daniel Pope

> ""Python 3.0 final was released on December 3rd, 2008.""
>
> - Python 3.0 Release notes

> ""The End Of Life date (EOL, sunset date) for Python 2.7 has been moved [...]
> to 2020.""
>
> - PEP 373: Python 2.7 Release Schedule

Migrating to Python 3 is not a big bang, it's a sequence of steps, like the
rungs of a ladder that spans from 2008 to 2020.

In 2015, many people still start new projects in Python 2. Many of us are
shackled to Python 2 for work. Some of us don't even have a migration plan.
Many people at this conference, if asked to run ""Python"", will launch Python 2.

Daniel will encourage you to grasp the ladder, put your feet firmly on it, and
take the next step in climbing to Python 3."
,Open Space,09-20-2015,11:30,12:00,LaterPay Learning Space (Bistro),,
,Power: Python in Astronomy,09-20-2015,11:30,12:00,The Software Sustainability Institute Room (CC2.1),,"Tomas James

The universe is a wild and wonderful place. From the quantum mechanical effects that power the Sun, to the gravitational effects that suck everything in to a black hole, one thing links them all: they can all be analysed using Python.

Python’s clear syntax and extensibility makes it an incredibly usable and streamlined language for scientists. We’ll cover off exactly how scientists use Python, what Python can do that other languages can’t (and where it sometimes falls short), and just how Python can be used at home to generate beautiful astronomical images."
,PyCon UK Jobs Fair,09-20-2015,12:00,14:00,PythonAnywhere Room (CC1.3),,
,Single Board Computer HackSpace,09-20-2015,12:00,13:00,Osper Room (CC1.4),,
,Open Space,09-20-2015,12:00,12:30,LaterPay Learning Space (Bistro),,
,Pythons and Earthquakes,09-20-2015,12:00,12:30,The Software Sustainability Institute Room (CC2.1),,"Girish Kumar

This is a session we will cover how python is used in providing near-real-time maps of landslide hazard following large earthquakes. And to dig detail on tool we build called 'shakeslide' for post-distaster response, analysis and research. 

By end of this session my audience will be enriched by the potential of python programming language and its contribution in the solving some of the serious issues in today's world, in field of research. I will also discuss the process of  how research paper was converted into functional web application and its impact of doing that. Hopefully, this talk should motivate PhD students and research staff in using python for their projects and helps them to realise their potential impact they could make in their research application."
,Event-Sourced Domain Models in Python,09-20-2015,12:30,15:00,YPlan Room (CC1.8),,"Robert Smallshire

#### Preparation

 * This is a *work*shop, not a lecture, so come with a laptop or pair-up with
 somebody who has one.

 * This workshop requires at least [Python 3.4](https://www.python.org/downloads/) so you should have a suitable interpreter installed.

 * Bring your favourite Python code editor.

 * Have the [workshop student materials](https://bitbucket.org/sixty-north/d5-workshop-exercises-student-material) installed from Bitbucket. Further instructions are to be found there.

#### Synopsis

In first part of this workshop we explore how to implement rich domain models using plain-old Python objects which are completely independent of any particular persistence technology such as an object-relational mapper.  Domain models often embody the core value of software systems, so implementing models independently of - often ephemeral - technology choices is an important strategy for long-lived, high-value systems.

In the second part of this workshop we implement an event-sourced architecture for persistence of our domain model, whereby all changes applied to the model are recorded as events in a simple, append-only event-store.  From this event store we can reconstitute the model state as it was at any historical time, something that is difficult – if not impossible – to do with most object-relational solutions.  Furthermore, we can project the event stream into other representations to support queries which are not conveniently supported by the entities in our model, or which roll-up historical data. Among many other benefits, such projected read-models gives very high scalability on the read-side.

This workshop is aimed at Python developers who want to step beyond the limits of canned framework-based solutions such as Django models, or toolkits such as SQLAlchemy, (which are ultimately about managing the horrors of shared-mutable state).  Event-sourced domain models facilitate allow us to combine the best aspects of object-oriented design with robust and simple persistence inspired by functional-programming practice."
,Open Space,09-20-2015,12:30,13:00,LaterPay Learning Space (Bistro),,
,Lunch,09-20-2015,12:30,13:30,The Software Sustainability Institute Room (CC2.1),,
,EuroPython in UK bid Discussion,09-20-2015,13:00,14:00,Osper Room (CC1.4),,
,Open Space,09-20-2015,13:00,13:30,LaterPay Learning Space (Bistro),,
,Open Space,09-20-2015,13:30,14:00,LaterPay Learning Space (Bistro),,
,Getting meaning from scientific articles,09-20-2015,13:30,14:00,The Software Sustainability Institute Room (CC2.1),,"Eleonore Mayola

The bibliography process means every scientist regularly has to go through a lot of published articles in parallel to her/his research. The aim is 1) to know what other researchers are doing: they might be ahead of you, they might have proven your project is a dead end, 2) get some context to interpret your research results. 
Using specialised search engines can be inefficient if you don't use the ""right"" keywords. Researcher also tend to find bibliography boring so it would be interesting to automate part of the process!

In my talk I'll answer the following question: can Python machine learning libraries (nltk, scikit-learn) be used to 
determine whether a research article is worth reading? I'll use the Natural Language Processing to identify articles topics and train a classifier to distinguish between relevant and non-relevant articles depending and someone's area of research."
,Testing with two failure seeking missiles,09-20-2015,14:00,14:30,PythonAnywhere Room (CC1.3),,"Tom Viner

Testing with purely random data on it's own doesn't get you very far. But
two approaches that have been around for a while have new libraries that
help you generate random input, that homes in on failing testcases.

First **[Hypothesis](https://hypothesis.readthedocs.org/en/latest/)**, a Python implementation and update of the Haskell library QuickCheck. Known as property based testing, you specify a property of your
code that must hold, and Hypothesis does its best to find a counterexample.
It then shrinks this to find the minimal input that contradicts your property.

Second, **[American fuzzy lop](http://lcamtuf.coredump.cx/afl/)** (AFL), is a young fuzzing library that's already
achieved an impressive trophy case of bug discoveries. Using
instrumentation and genetic algorithms, it generates test input that
carefully searches out as many code paths as it can find, seeking greater
functional coverage and ultimately locating crashes and hangs that no other
method has found. I'll be showing how with **[Python-AFL](http://jwilk.net/software/python-afl)** we can apply this
tool to our Python code."
,Getting schemas around semi-structured data using Avro,09-20-2015,14:00,14:30,Osper Room (CC1.4),,"Konark Modi

In this world of big-data where we are producing data of enormous variety, velocity, volume and the nature being semi-structured we need to put some rules around data being collected which are not rigid yet allow efficient management of it right from collection layer.

My talk is based on first-hand experience that me and my team had while writing frameworks and data pipelines , we like anyone else started with collecting data in JSON format. But soon started to run into problems because of systems which were writing the data were abusing the flexibility.

More importantly how we can leverage Python with this and makes it interoperable with various Big Data techologies.

Schemas  / Serialization is a layer not many people talk about , but in my experience it is very useful and one can benefit from it in many many ways.


The agenda of the talk is as follows :

1. Need of a schema / serialization.
2. Avro and why is it so awesome.
3. Demo of creating some schemas and showcasing the features.
4. How Avro serialized data can be used across different layers / tools in the BigData pipeline. Be it Realtime processing system like Kafka with Storm or Batch processing system like Hadoop, Hive etc.
5. Setting up your AVRO schema repository to help people create, distrubute and manage schemas. A pure Django based implementation.
6.  Do's and Don'ts .


Who should Attend :

I plan to keep it beginner friendly, any one who has been or is doing data collection at any level can benefit from this talk."
,Open Space,09-20-2015,14:00,15:00,LaterPay Learning Space (Bistro),,
,Demo: Simple web services for scientific data,09-20-2015,14:00,14:30,The Software Sustainability Institute Room (CC2.1),,"Alys Brett, Culham Centre for Fusion Energy

Would you like to let people access your data over the web or generate plots on
the fly when someone loads a web page? This session will introduce the benefits
of creating web services for accessing scientific data and let you try out the
basics for yourself.

It is now common for online companies to provide programmatic access to data -
web APIs where data resources in many forms can be accessed via a URL. This
approach can be very useful for scientific data too. One benefit is that you
don't have to worry about what platforms and languages to support - the data can
be used by anything that can make HTTP requests. You might think that creating
this kind of web service is solely the preserve of professional engineers but,
with the power of Python, this is changing. There are very convenient packages
(such as Flask and Requests) that make it incredibly simple to get started.

The session will start with a demonstration of some web services we've developed
for nuclear fusion data from the JET experiment, including a plot server and a
data browsing tool. This will be followed by a mini-tutorial to help you get
started with harnessing the power of HTTP web services."
,Data Visualisation with Python and Javascript - crafting a data-visualisation for the web,09-20-2015,14:30,15:00,PythonAnywhere Room (CC1.3),,"Kyran Dale

To accompany an upcoming O'Reilly book 'Data-visualisation with Python and Javascript: crafting a dataviz toolchain for the web' (see here) this talk aims to sketch out the toolchain by transforming some dry Wikipedia data (Nobel prize-winners) into a far more engaging and insightful web-visualisation. This transformative cycle uses Python big-hitters such as Scrapy, Pandas and Flask, the latter delivering data to Javascript's D3. These are the industrial lathes of the toolchain but Python's fantastic standard library and all those first class data-munging libraries are involved, the spanners, hammers and screwdrivers of the toolchain.

While Python is fast becoming the goto language for data-processing/science, the visual fruits of that labour hit the wall of the web, where there is only one first-class language, Javascript. To develop a data-viz toolchain for the modern world, where web-presentation is increasingly mandated, making Python and Javascript play nicely is fundamental. This talk aims to show that the perceived wall between the two languages is actually a thin, permeable membrane and that, with a bare minimum of web-dev, one can get on with programming seamlessly in both."
,Analyse Yourselves,09-20-2015,14:30,15:00,Osper Room (CC1.4),,"Norberto Leite

Abstract: In today's mundane usage of digital services, from ecommerce to day-to-day email, one might imagine that we generate a considerable amount of data. We access the internet, our phones are constantly generating information and sharing that with services, sometimes without us being total aware of such, and even our household appliances are starting to become more and more self sufficient and connected, the so called internet of things or internet of everything. Can we start getting in control of that data? What tools do we have available to start getting a sense of what's the size/shape/kind of data that we generate? Where does it come from and where do we send it to?
Although the talk title might suggestion topics around introspection and psychoanalysis we are not going to get into that (not in psychological ground at least) but we will look into in which ways could we build small sets of applications that could give us a better sense of our digital footprint and content that flows at our broadband connection. We will be analysing samples of email, internet traffic, webapps and mobile apps data connections and inflows.

Learning objectives:
Use simple python libraries we will be looking into what we can do tap on our devices and keep track of our digital inflows like scapy and httplib2
Tools available to analyse and store and this data, mostly around pandas and mongodb
Libraries to present and visualize this information like seaborn and matplotlib
Tools for predictive analytics like anaconda. 

This is practical session where we will be discussing some of these general aspects of the data crossing ""our pipes"" and what we can do with that to learn a bit more of ourselves or which type of interactions do we do in a quantifiable manner.

We will be using quantifiable and measurable traffic from several different feeds including your facebook timeline, twitter feeds, email and internet traffic."
,Discussion: From data to dissemination - dealing with publications,09-20-2015,14:30,15:15,The Software Sustainability Institute Room (CC2.1),,"Discussion: From data to dissemination: dealing with publications

A major theme for anyone in working research is how best to publish and
disseminate their work. These days a wide range of tools are available to help,
at every stage of the writing process - from great Python libraries for
charting, to online bibliography tool and LaTeX packages to beautify your
papers. This panel discussion will cover all aspects of dissemination work,
and how Python can ease your publication pain.

Panel members will include:

<ul>
<li><strong>Alice Harpole</strong> University of Southampton</li>
<li><strong>Vince Knight</strong> University of Cardiff</li>
<li><strong>John Hammersley</strong> Overleaf</li>
<li><strong>Jonathan Fine</strong> Open University</li>
</ul>"
,Plenary,09-20-2015,15:00,15:15,PythonAnywhere Room (CC1.3),,
,The PyCon UK Panel,09-20-2015,15:15,16:00,PythonAnywhere Room (CC1.3),,
,The Lightning Talk Show,09-20-2015,16:00,17:30,PythonAnywhere Room (CC1.3),,
,The Non-Closing Closing,09-20-2015,17:30,18:00,PythonAnywhere Room (CC1.3),,
,End of Day,09-20-2015,18:00,19:30,PythonAnywhere Room (CC1.3),,
,The Mellow Night,09-20-2015,19:30,23:59,PythonAnywhere Room (CC1.3),,
,Sprint Opening,09-21-2015,09:30,10:00,Sprint Rooms,,
,"Sprints are collaborative programming groups. The Sprints that have been proposed so far are: Python for Science sprint Don't be afraid to commit Unit test documentation improvements Axelrod - sprint/tournament - code up strategies, get famous Improving the Myrmidon Python game framework py.test sprint Romaine (BDD tool) MicroPython / BBC micro:bit Pylint sprint Pi In The Sky Port PyCon UK website to Python 3 (or convert to Sphinx)",09-21-2015,10:00,12:30,Sprint Rooms,,
,"The Last Meal - we share a final meal of Fish and Chips together (plus vegetarian options, etc)",09-21-2015,12:30,13:30,Sprint Rooms,,
,Sprints (Continued),09-21-2015,13:30,16:00,Sprint Rooms,,
,Share results together,09-21-2015,16:00,17:00,Sprint Rooms,,
,"End of Conference, pack up, see you in 2016!",09-21-2015,17:00,23:59,Sprint Rooms,,
